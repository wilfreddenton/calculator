@mixin responsiveMin($width) {
  @if $width == large {
    @media (min-width: $width-large-min) {
      @content;
    }
  } @else if $width == medium {
    @media (min-width: $width-medium-min) {
      @content;
    }
  } @else if $width == small {
    @media (min-width: $width-small-min) {
      @content;
    }
  } @else if $width == xsmall {
    @media (min-width: $width-xsmall-min) {
      @content;
    }
  }
}
@mixin responsiveMax($width) {
  @if $width == large {
    @media (max-width: $width-large) {
      @content;
    }
  } @else if $width == medium {
    @media (max-width: $width-medium) {
      @content;
    }
  } @else if $width == small {
    @media (max-width: $width-small) {
      @content;
    }
  } @else if $width == xsmall {
    @media (max-width: $width-xsmall) {
      @content;
    }
  }
}
@mixin rounded($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}
@mixin roundedBottom($radius) {
  -webkit-border-bottom-right-radius: $radius;
  -moz-border-bottom-right-radius: $radius;
  -ms-border-bottom-right-radius: $radius;
  -o-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
  -webkit-border-bottom-left-radius: $radius;
  -moz-border-bottom-left-radius: $radius;
  -ms-border-bottom-left-radius: $radius;
  -o-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
}
@mixin roundedTop($radius) {
  -webkit-border-top-right-radius: $radius;
  -moz-border-top-right-radius: $radius;
  -ms-border-top-right-radius: $radius;
  -o-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
  -webkit-border-top-left-radius: $radius;
  -moz-border-top-left-radius: $radius;
  -ms-border-top-left-radius: $radius;
  -o-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
}
@mixin shadow($x, $y, $blur, $color) {
  -webkit-box-shadow: $x $y $blur $color;
  -moz-box-shadow: $x $y $blur $color;
  box-shadow: $x $y $blur $color;
}
@mixin textShadow($x, $y, $blur, $color) {
  -webkit-text-shadow: $x $y $blur $color;
  -moz-text-shadow: $x $y $blur $color;
  -ms-text-shadow: $x $y $blur $color;
  -o-text-shadow: $x $y $blur $color;
  text-shadow: $x $y $blur $color;
}
